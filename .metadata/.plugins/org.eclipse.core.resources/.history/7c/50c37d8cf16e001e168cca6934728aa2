/*
 * insertion_sort.s
 *
 *  Created on: 10/08/2023
 *      Author: Ni Qingqing
 */
   .syntax unified
	.cpu cortex-m4
	.fpu softvfp
	.thumb

		.global insertion_sort

@ Start of executable code
.section .text

@ EE2028 Assignment 1, Sem 1, AY 2023/24
@ (c) ECE NUS, 2023
@ Insertion sort arr in ascending order

@ Write Student 1’s Name here:
@ Write Student 2’s Name here:

@ You could create a look-up table of registers here:

@ R0 ...
@ R1 ...

@ write your program from here:
insertion_sort:
	PUSH {R14}

	// R0 - array
	// R1 - current value
	// R2 - prev value
	// R3 - temp value
	// R4 - total number of elements
	// R5 - current index

	LDR R2, [R0, #4] // access next member of array
	MOV R0, R2

	BL SUBROUTINE

	POP {R14}
	BX LR

outer_loop:
	PUSH {R4, R5}
	LDR R4, R1


	CMP R2, R1
	POP {R4, R5}
	BX

inner_loop:
	CMP R4, R2
	BGE outer_loop

ADVANCE_INDEX:

	BX LR

SWAP:
